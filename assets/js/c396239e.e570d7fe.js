"use strict";(self.webpackChunkOPS235=self.webpackChunkOPS235||[]).push([[884],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),h=i,d=m["".concat(s,".").concat(h)]||m[h]||p[h]||a;return n?r.createElement(d,o(o({ref:t},u),{},{components:n})):r.createElement(d,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2136:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return p},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return c}});var r=n(3117),i=(n(7294),n(3905));const a={id:"scripting-exercise",title:"Scripting Exercise",sidebar_position:1,description:"Scripting Exercise for Students to Complete"},o="Scripting Exercises",l={unversionedId:"C-ExtraResources/scripting-exercise",id:"C-ExtraResources/scripting-exercise",title:"Scripting Exercise",description:"Scripting Exercise for Students to Complete",source:"@site/docs/C-ExtraResources/scripting-exercise.md",sourceDirName:"C-ExtraResources",slug:"/C-ExtraResources/scripting-exercise",permalink:"/OPS235/C-ExtraResources/scripting-exercise",draft:!1,editUrl:"https://github.com/Seneca-ICTOER/OPS235/tree/main/docs/C-ExtraResources/scripting-exercise.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"scripting-exercise",title:"Scripting Exercise",sidebar_position:1,description:"Scripting Exercise for Students to Complete"},sidebar:"courseNotesSidebar",previous:{title:"Assignment 2",permalink:"/OPS235/B-Assignments/assignment2"},next:{title:"Tips",permalink:"/OPS235/C-ExtraResources/tips"}},s={},c=[{value:"Things on this page",id:"things-on-this-page",level:2},{value:"Terminal vs script file",id:"terminal-vs-script-file",level:3},{value:"Running a command",id:"running-a-command",level:3},{value:"Variables",id:"variables",level:3},{value:"Getting input from the user",id:"getting-input-from-the-user",level:3},{value:"Quotes",id:"quotes",level:3},{value:"Redirecting output",id:"redirecting-output",level:3},{value:"Basic commands",id:"basic-commands",level:3},{value:"Conditional statements",id:"conditional-statements",level:3},{value:"Exercises",id:"exercises",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"scripting-exercises"},"Scripting Exercises"),(0,i.kt)("h2",{id:"things-on-this-page"},"Things on this page"),(0,i.kt)("h3",{id:"terminal-vs-script-file"},"Terminal vs script file"),(0,i.kt)("p",null,"A shell script is nothing more than a sequence of shell commands. Any command you put in a shell script can be executed just as well in a terminal. In fact no matter how complex your script is - you can run the entire thing from a terminal window without executing the script."),(0,i.kt)("h3",{id:"running-a-command"},"Running a command"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"How to run a command in the current directory or another directory or a directory in the $PATH"),(0,i.kt)("li",{parentName:"ul"},"That programs you run need to have execute permission"),(0,i.kt)("li",{parentName:"ul"},"What your $PWD is, pwd command"),(0,i.kt)("li",{parentName:"ul"},"Check the return code from a command by examining $?")),(0,i.kt)("h3",{id:"variables"},"Variables"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"How to create a variable and set a value in it"),(0,i.kt)("li",{parentName:"ul"},"How to get the value from a variable")),(0,i.kt)("h3",{id:"getting-input-from-the-user"},"Getting input from the user"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The read command")),(0,i.kt)("h3",{id:"quotes"},"Quotes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Why use single or double quotes"),(0,i.kt)("li",{parentName:"ul"},"The difference between single and double quotes"),(0,i.kt)("li",{parentName:"ul"},"Backquotes")),(0,i.kt)("h3",{id:"redirecting-output"},"Redirecting output"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"How to redirect output from a command to a file"),(0,i.kt)("li",{parentName:"ul"},"How to pipe output from one command to another command")),(0,i.kt)("h3",{id:"basic-commands"},"Basic commands"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"cat"),(0,i.kt)("li",{parentName:"ul"},"grep"),(0,i.kt)("li",{parentName:"ul"},"cut")),(0,i.kt)("h3",{id:"conditional-statements"},"Conditional statements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"if"),(0,i.kt)("li",{parentName:"ul"},"test, ","[")),(0,i.kt)("h3",{id:"exercises"},"Exercises"),(0,i.kt)("p",null,"You can do these exercises in any order, and change them in any way you like."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create a bash script that will print Hello, then list the contents of the / directory, then print Good Bye."),(0,i.kt)("li",{parentName:"ul"},"Create a bash script that will run your other script twice.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Run this new script from different locations, and see if it always works. Fix it if it doesn't."))),(0,i.kt)("li",{parentName:"ul"},"Create a bash script to display the contents of /etc/sysconfig/network-scripts/ifcfg-ens33",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Pipe the output to cat",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Pipe that output to cat. See if you understand why that doesn't seem to do anything"))))),(0,i.kt)("li",{parentName:"ul"},"Create a bash script which will use cat and grep to find the line with BOOTPROTO in /etc/sysconfig/network-scripts/ifcfg-ens33"),(0,i.kt)("li",{parentName:"ul"},"Create a bash script in which you will create a variable called BP.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'Assign to that variable the value BOOTPROTO="dhcp" (the equal sign and quotes are part of the value).'),(0,i.kt)("li",{parentName:"ul"},"Use the cut command to retrieve the part between the double-quotes (in this case that's: dhcp)."),(0,i.kt)("li",{parentName:"ul"},"Save the result in a variable, and print that variable."))),(0,i.kt)("li",{parentName:"ul"},"Combine the two scripts above into one. The script should tell you what the value of BOOTPROTO from /etc/sysconfig/network-scripts/ifcfg-ens33 is."),(0,i.kt)("li",{parentName:"ul"},"Use the ls and wc commands to find how many log files there are in /var/log/",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Add a grep command to find how many of a certain type of log file there are (e.g. vmware-network log files)"))),(0,i.kt)("li",{parentName:"ul"},"Use the history and grep commands to find any command you ran in the past that contained a certain keyword (like .sh or cat)"),(0,i.kt)("li",{parentName:"ul"},"Write a bash script which will use the whoami, hostname, date, and lvs commands to create a report.txt file containing all that information.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Set it up so that the date (in YYYY-MM-DD format) is in the filename of the report, e.g. report-YYYY-MM-DD.txt"))),(0,i.kt)("li",{parentName:"ul"},'Write a bash script that will ask the user for a process name, will check whether that process is running, and if it is: it will print "The process is running". If it isn\'t: it will print "The process is not running".',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Modify that script to include the number of processes with that name that are running."))),(0,i.kt)("li",{parentName:"ul"},"Write a script that will use a for loop and the cut command to get a list of usernames from the /etc/passwd file and print one username perline.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},'For each user: using an if statement check whether the directory /home/thatusername exists and then each line will look like: "user1: home directory does not exist" or "user2: home directory exists".'),(0,i.kt)("li",{parentName:"ul"},"Instead of checking for /home/thatusername check for the home directory in the passwd file line for that user.")))))}p.isMDXComponent=!0}}]);